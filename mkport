#!/usr/5bin/sh

# include pkgconf - contains functions and definitions - NOTE: must be in $PATH
. pkgconf

# Set Variables. These are used to create a pkginfo file
PKG="icecat"
VERSION="60.3.0.en-US.gnulinux"
CATEGORY="net"
ARCH="x86_64"
SOURCE="https://ftp.gnu.org/gnu/gnuzilla/60.3.0/icecat-60.3.0.en-US.gnulinux-x86_64.tar.bz2"
BASEDIR="/opt/$PKG"
PSTAMP="$VERSION"
NAME="GNU fork of Mozilla Firefox"

# There's probably a better way to do this
main() {
    if [ ! -f $PKG-$VERSION-$ARCH.tar.bz2 ]; then
        wget $SOURCE
    fi
    if [ -f $PKG-$VERSION-$ARCH.tar.bz2 ]; then
        # the infamous extract function handles many different archive types
        extract $PKG-$VERSION-$ARCH.tar.bz2
        build
    fi
}

build() {

    # cd to archive
    cd $PKG

    # Change permissions
    chown -R root:root .
    find -L . \
        \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
        -o -perm 511 \) -exec chmod 755 {} \; -o \
        \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
        -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

    # Create pkginfo
    mkpkginfo

    # Create prototype
    cd ../
    $PKG_PROTO $CATEGORY $PKG=$BASEDIR > prototype
    sed -i '1s/^/i pkginfo \n /' prototype

    # Make package
    $PKG_MK

    # Translate to datastream
    $PKG_TRANS $PKG_CACHE $PKG-$VERSION.pkg $PKG

    # Cleanup
    #rm -r $PKG_CACHE/$PKG
    #rm -r $PKG
}

main

