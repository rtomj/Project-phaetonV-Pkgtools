#!/bin/sh

. pkg

pkg=clang
version="7.0.0"
category=development
arch="x86_64"
basedir="/"
pstamp="$version"
name="clang compiler"
source="https://llvm.org/releases/$version/llvm-$version.src.tar.xz"
source2=https://llvm.org/releases/$version/cfe-$version.src.tar.xz
#deps="llvm"

mkdir -p /tmp/$pkg
wget $source
wget $source2

xzcat llvm-$version.src.tar.xz | tar xf -
xzcat cfe-$version.src.tar.xz | tar xf -

mv cfe-$version.src llvm-$version.src/tools/clang
cd llvm-$version.src
mkdir build
cd build

cmake .. -G Ninja \
    -DLLVM_PARALLEL_COMPILE_JOBS="${JOBS:-1}" \
    -DLLVM_ENABLE_CXX1Y=1 \
    -DLLVM_INCLUDE_EXAMPLES=0 \
    -DLLVM_INCLUDE_TESTS=0 \
    -DLLVM_ENABLE_FFI=1 \
    -DLLVM_TARGETS_TO_BUILD='X86;AMDGPU;BPF' \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLLVM_APPEND_VC_REV=0 \
    -Wno-dev

ninja
DESTDIR=/tmp/$pkg ninja install

# only clang may be left, remove llvm
rm -r /tmp/$pkg/usr/include/llvm{,-c}
rm -r /tmp/$pkg/usr/lib/cmake/llvm
rm -r /tmp/$pkg/usr/share/opt-viewer
rm /tmp/$pkg/usr/bin/{bugpoint,ll*,opt,obj2yaml,sancov,sanstats,verify-uselistorder,yaml2obj,dsymutil}
rm /tmp/$pkg/usr/lib/{LLVMHello.so,BugpointPasses.so,libLTO.*,libLLVM*}

mv /tmp/$pkg/usr/libexec/{c++-analyzer,ccc-analyzer} /tmp/$pkg/usr/lib/clang
rmdir /tmp/$pkg/usr/libexec
/bin/sed -i 's|libexec|lib/clang|' /tmp/$pkg/usr/bin/scan-build

mkpkg

